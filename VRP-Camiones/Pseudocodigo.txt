// Parámetros generales
CAPACIDAD_MAX ← 15        // kg
VEL_MED       ← 60        // km/h
T_DESPACHO    ← 10        // min por cliente
T_RECARGA     ← 20        // min en depósito
T_JORNADA     ← 7 * 60    // min efectivos (7 h)

// --- 1. Carga de datos ---
clientes ← leer Excel de clientes  
para cada cliente en clientes:
    cliente.asignado     ← falso
    cliente.día_entrega  ← null
    cliente.llegada_min  ← null
    cliente.salida_min   ← null

día_actual ← 1

// --- 2. Ciclo diario ---
mientras exista cliente con asignado = falso:
    imprimir "=== Día " + día_actual + " ==="
    
    // Inicializar flota
    camiones ← lista de 4 camiones
    para cada camión en camiones:
        camión.carga      ← 0
        camión.tiempo     ← 0       // minutos desde inicio de jornada
        camión.distancia  ← 0       // km
        camión.ruta       ← [DEPÓSITO]  
        camión.ubicación  ← DEPÓSITO (ID=0)

    // Asignar rutas por camión
    para cada camión en camiones:
        repetir:
            // Filtrar candidatos por carga
            candidatos ← {c ∈ clientes | ¬c.asignado y c.peso + camión.carga ≤ CAPACIDAD_MAX}
            si candidatos está vacío:
                salir del repetir
            
            // Evaluar coste para cada candidato
            mejor ← null
            para cada c en candidatos:
                d_ida  ← distancia(camión.ubicación, c.ubicación)
                t_ida  ← (d_ida / VEL_MED) * 60
                d_ret  ← distancia(c.ubicación, DEPÓSITO)
                t_ret  ← (d_ret / VEL_MED) * 60
                coste  ← t_ida + T_DESPACHO + t_ret
                si camión.tiempo + coste > T_JORNADA:
                    continuar  // no cabe en jornada
                si mejor = null o coste < mejor.coste:
                    mejor ← (cliente=c, coste=coste, t_ida=t_ida, d_ida=d_ida)
            
            si mejor = null:
                salir del repetir
            
            // Atender al cliente seleccionado
            c ← mejor.cliente
            // registrar llegada y salida
            llegada ← camión.tiempo + mejor.t_ida
            salida  ← llegada + T_DESPACHO
            c.llegada_min ← llegada
            c.salida_min  ← salida
            c.día_entrega ← día_actual
            c.asignado    ← verdadero
            
            // actualizar estado del camión
            camión.ruta.append(c.ID)
            camión.carga    ← camión.carga + c.peso
            camión.tiempo   ← salida
            camión.distancia← camión.distancia + mejor.d_ida
            camión.ubicación← c.ubicación
            
            // recarga intermedia si no cabe el siguiente paquete
            pesos_restantes ← [x.peso | x ∈ clientes si ¬x.asignado]
            si pesos_restantes no vacío y camión.carga + mínimo(pesos_restantes) > CAPACIDAD_MAX:
                // volver al depósito y recargar
                d_vuelta ← distancia(camión.ubicación, DEPÓSITO)
                t_vuelta ← (d_vuelta / VEL_MED) * 60
                camión.tiempo    ← camión.tiempo + t_vuelta + T_RECARGA
                camión.distancia ← camión.distancia + d_vuelta
                camión.ruta.append(DEPÓSITO)
                camión.carga     ← 0
                camión.ubicación← DEPÓSITO
            
        hasta que no queden candidatos o no quepa más
        
        // Cerrar ruta al depósito final del día
        si camión.ubicación ≠ DEPÓSITO:
            d_fin    ← distancia(camión.ubicación, DEPÓSITO)
            t_fin    ← (d_fin / VEL_MED) * 60
            camión.tiempo    ← camión.tiempo + t_fin
            camión.distancia ← camión.distancia + d_fin
            camión.ruta.append(DEPÓSITO)

        // Registrar métricas del camión
        registrar(camión.ID, día_actual, camión.distancia, camión.tiempo, camión.ruta)

    día_actual ← día_actual + 1

// --- 3. Salida de resultados ---
// 3.1 Entregas
imprimir tabla de clientes con columnas:
    [día_entrega, cliente.ID, llegada_min, salida_min, dist_tramo_km]

// 3.2 Métricas
imprimir tabla de métricas con columnas:
    [día, camión, distancia_km, tiempo_min]

// 3.3 Visualización
– Graficar en X–Y cada ruta de cada camión
– Marcar depósito y puntos de entrega

// 3.4 Reporte
– Exportar todo a un PDF con secciones:
    • “Entregas”
    • “Métricas”
    • “Rutas”
